//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Cabana.Campo.RAAgricola.WS.WebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="InterfaceEAM_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/InterfaceEAM")]
    public partial class InterfaceEAM : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InsertDetailsServicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostShipmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostResourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateAndPostJournalResourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertServiceOrderAllocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDetailsServicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrderServiceOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public InterfaceEAM() {
            this.Url = global::Cabana.Campo.RAAgricola.WS.Properties.Settings.Default.ILCWS_RAAgricola_Cs_WebReference_InterfaceEAM;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InsertDetailsServicesCompletedEventHandler InsertDetailsServicesCompleted;
        
        /// <remarks/>
        public event PostShipmentCompletedEventHandler PostShipmentCompleted;
        
        /// <remarks/>
        public event PostResourceCompletedEventHandler PostResourceCompleted;
        
        /// <remarks/>
        public event CreateAndPostJournalResourceCompletedEventHandler CreateAndPostJournalResourceCompleted;
        
        /// <remarks/>
        public event InsertServiceOrderAllocationCompletedEventHandler InsertServiceOrderAllocationCompleted;
        
        /// <remarks/>
        public event UpdateDetailsServicesCompletedEventHandler UpdateDetailsServicesCompleted;
        
        /// <remarks/>
        public event UpdateOrderServiceCompletedEventHandler UpdateOrderServiceCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/InterfaceEAM:InsertDetailsServices", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/InterfaceEAM", ResponseElementName="InsertDetailsServices_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/InterfaceEAM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertDetailsServices(string pedidoServicio, int tipo, string codigo, decimal cantidad, string bodega, string productoServicio, string fase, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime pFechaRegistro, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime pFechaEntregaPlanificada, int plinea, string pVariante) {
            object[] results = this.Invoke("InsertDetailsServices", new object[] {
                        pedidoServicio,
                        tipo,
                        codigo,
                        cantidad,
                        bodega,
                        productoServicio,
                        fase,
                        pFechaRegistro,
                        pFechaEntregaPlanificada,
                        plinea,
                        pVariante});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertDetailsServicesAsync(string pedidoServicio, int tipo, string codigo, decimal cantidad, string bodega, string productoServicio, string fase, System.DateTime pFechaRegistro, System.DateTime pFechaEntregaPlanificada, int plinea, string pVariante) {
            this.InsertDetailsServicesAsync(pedidoServicio, tipo, codigo, cantidad, bodega, productoServicio, fase, pFechaRegistro, pFechaEntregaPlanificada, plinea, pVariante, null);
        }
        
        /// <remarks/>
        public void InsertDetailsServicesAsync(string pedidoServicio, int tipo, string codigo, decimal cantidad, string bodega, string productoServicio, string fase, System.DateTime pFechaRegistro, System.DateTime pFechaEntregaPlanificada, int plinea, string pVariante, object userState) {
            if ((this.InsertDetailsServicesOperationCompleted == null)) {
                this.InsertDetailsServicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDetailsServicesOperationCompleted);
            }
            this.InvokeAsync("InsertDetailsServices", new object[] {
                        pedidoServicio,
                        tipo,
                        codigo,
                        cantidad,
                        bodega,
                        productoServicio,
                        fase,
                        pFechaRegistro,
                        pFechaEntregaPlanificada,
                        plinea,
                        pVariante}, this.InsertDetailsServicesOperationCompleted, userState);
        }
        
        private void OnInsertDetailsServicesOperationCompleted(object arg) {
            if ((this.InsertDetailsServicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDetailsServicesCompleted(this, new InsertDetailsServicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/InterfaceEAM:PostShipment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/InterfaceEAM", ResponseElementName="PostShipment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/InterfaceEAM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PostShipment(string document, string orderService, string user, string externalDocument) {
            object[] results = this.Invoke("PostShipment", new object[] {
                        document,
                        orderService,
                        user,
                        externalDocument});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PostShipmentAsync(string document, string orderService, string user, string externalDocument) {
            this.PostShipmentAsync(document, orderService, user, externalDocument, null);
        }
        
        /// <remarks/>
        public void PostShipmentAsync(string document, string orderService, string user, string externalDocument, object userState) {
            if ((this.PostShipmentOperationCompleted == null)) {
                this.PostShipmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostShipmentOperationCompleted);
            }
            this.InvokeAsync("PostShipment", new object[] {
                        document,
                        orderService,
                        user,
                        externalDocument}, this.PostShipmentOperationCompleted, userState);
        }
        
        private void OnPostShipmentOperationCompleted(object arg) {
            if ((this.PostShipmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostShipmentCompleted(this, new PostShipmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/InterfaceEAM:PostResource", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/InterfaceEAM", ResponseElementName="PostResource_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/InterfaceEAM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PostResource(string orderService) {
            object[] results = this.Invoke("PostResource", new object[] {
                        orderService});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PostResourceAsync(string orderService) {
            this.PostResourceAsync(orderService, null);
        }
        
        /// <remarks/>
        public void PostResourceAsync(string orderService, object userState) {
            if ((this.PostResourceOperationCompleted == null)) {
                this.PostResourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostResourceOperationCompleted);
            }
            this.InvokeAsync("PostResource", new object[] {
                        orderService}, this.PostResourceOperationCompleted, userState);
        }
        
        private void OnPostResourceOperationCompleted(object arg) {
            if ((this.PostResourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostResourceCompleted(this, new PostResourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/InterfaceEAM:CreateAndPostJournalResource" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/InterfaceEAM", ResponseElementName="CreateAndPostJournalResource_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/InterfaceEAM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateAndPostJournalResource(string pNo_Resource, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime pDate_Post, decimal pQuantity, string pUnitMeasureCode, string pDocumentNo) {
            object[] results = this.Invoke("CreateAndPostJournalResource", new object[] {
                        pNo_Resource,
                        pDate_Post,
                        pQuantity,
                        pUnitMeasureCode,
                        pDocumentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAndPostJournalResourceAsync(string pNo_Resource, System.DateTime pDate_Post, decimal pQuantity, string pUnitMeasureCode, string pDocumentNo) {
            this.CreateAndPostJournalResourceAsync(pNo_Resource, pDate_Post, pQuantity, pUnitMeasureCode, pDocumentNo, null);
        }
        
        /// <remarks/>
        public void CreateAndPostJournalResourceAsync(string pNo_Resource, System.DateTime pDate_Post, decimal pQuantity, string pUnitMeasureCode, string pDocumentNo, object userState) {
            if ((this.CreateAndPostJournalResourceOperationCompleted == null)) {
                this.CreateAndPostJournalResourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateAndPostJournalResourceOperationCompleted);
            }
            this.InvokeAsync("CreateAndPostJournalResource", new object[] {
                        pNo_Resource,
                        pDate_Post,
                        pQuantity,
                        pUnitMeasureCode,
                        pDocumentNo}, this.CreateAndPostJournalResourceOperationCompleted, userState);
        }
        
        private void OnCreateAndPostJournalResourceOperationCompleted(object arg) {
            if ((this.CreateAndPostJournalResourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateAndPostJournalResourceCompleted(this, new CreateAndPostJournalResourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/InterfaceEAM:InsertServiceOrderAllocation" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/InterfaceEAM", ResponseElementName="InsertServiceOrderAllocation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/InterfaceEAM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertServiceOrderAllocation(string pNumeroPedidoServicio, string pProductoServicio, int pLineaProductoServicio, string pNoRecurso, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime pFechaAsignacion, decimal pHorasAsignadas, [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime pHoraInicial, [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime pHoraFinal, int pNoLineaLIneasServicio) {
            object[] results = this.Invoke("InsertServiceOrderAllocation", new object[] {
                        pNumeroPedidoServicio,
                        pProductoServicio,
                        pLineaProductoServicio,
                        pNoRecurso,
                        pFechaAsignacion,
                        pHorasAsignadas,
                        pHoraInicial,
                        pHoraFinal,
                        pNoLineaLIneasServicio});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertServiceOrderAllocationAsync(string pNumeroPedidoServicio, string pProductoServicio, int pLineaProductoServicio, string pNoRecurso, System.DateTime pFechaAsignacion, decimal pHorasAsignadas, System.DateTime pHoraInicial, System.DateTime pHoraFinal, int pNoLineaLIneasServicio) {
            this.InsertServiceOrderAllocationAsync(pNumeroPedidoServicio, pProductoServicio, pLineaProductoServicio, pNoRecurso, pFechaAsignacion, pHorasAsignadas, pHoraInicial, pHoraFinal, pNoLineaLIneasServicio, null);
        }
        
        /// <remarks/>
        public void InsertServiceOrderAllocationAsync(string pNumeroPedidoServicio, string pProductoServicio, int pLineaProductoServicio, string pNoRecurso, System.DateTime pFechaAsignacion, decimal pHorasAsignadas, System.DateTime pHoraInicial, System.DateTime pHoraFinal, int pNoLineaLIneasServicio, object userState) {
            if ((this.InsertServiceOrderAllocationOperationCompleted == null)) {
                this.InsertServiceOrderAllocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertServiceOrderAllocationOperationCompleted);
            }
            this.InvokeAsync("InsertServiceOrderAllocation", new object[] {
                        pNumeroPedidoServicio,
                        pProductoServicio,
                        pLineaProductoServicio,
                        pNoRecurso,
                        pFechaAsignacion,
                        pHorasAsignadas,
                        pHoraInicial,
                        pHoraFinal,
                        pNoLineaLIneasServicio}, this.InsertServiceOrderAllocationOperationCompleted, userState);
        }
        
        private void OnInsertServiceOrderAllocationOperationCompleted(object arg) {
            if ((this.InsertServiceOrderAllocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertServiceOrderAllocationCompleted(this, new InsertServiceOrderAllocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/InterfaceEAM:UpdateDetailsServices", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/InterfaceEAM", ResponseElementName="UpdateDetailsServices_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/InterfaceEAM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdateDetailsServices(string pPedidoServicio, int plinea, decimal pAvance) {
            object[] results = this.Invoke("UpdateDetailsServices", new object[] {
                        pPedidoServicio,
                        plinea,
                        pAvance});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDetailsServicesAsync(string pPedidoServicio, int plinea, decimal pAvance) {
            this.UpdateDetailsServicesAsync(pPedidoServicio, plinea, pAvance, null);
        }
        
        /// <remarks/>
        public void UpdateDetailsServicesAsync(string pPedidoServicio, int plinea, decimal pAvance, object userState) {
            if ((this.UpdateDetailsServicesOperationCompleted == null)) {
                this.UpdateDetailsServicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDetailsServicesOperationCompleted);
            }
            this.InvokeAsync("UpdateDetailsServices", new object[] {
                        pPedidoServicio,
                        plinea,
                        pAvance}, this.UpdateDetailsServicesOperationCompleted, userState);
        }
        
        private void OnUpdateDetailsServicesOperationCompleted(object arg) {
            if ((this.UpdateDetailsServicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDetailsServicesCompleted(this, new UpdateDetailsServicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/InterfaceEAM:UpdateOrderService", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/InterfaceEAM", ResponseElementName="UpdateOrderService_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/InterfaceEAM", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string UpdateOrderService(int estado, int prioridad, string idUsuarioAsignado, string tipoPedidoServicio, string productoServicio, int estadoLanzamiento, string codigoTransportista, string codigoZonaServicio, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fechaPedido, [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime horaINicial, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fechaFinalizacion, [System.Xml.Serialization.XmlElementAttribute(DataType="time")] System.DateTime horaFinalizacion, string numeroOrdenServicio, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fechaInicializacion) {
            object[] results = this.Invoke("UpdateOrderService", new object[] {
                        estado,
                        prioridad,
                        idUsuarioAsignado,
                        tipoPedidoServicio,
                        productoServicio,
                        estadoLanzamiento,
                        codigoTransportista,
                        codigoZonaServicio,
                        fechaPedido,
                        horaINicial,
                        fechaFinalizacion,
                        horaFinalizacion,
                        numeroOrdenServicio,
                        fechaInicializacion});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateOrderServiceAsync(int estado, int prioridad, string idUsuarioAsignado, string tipoPedidoServicio, string productoServicio, int estadoLanzamiento, string codigoTransportista, string codigoZonaServicio, System.DateTime fechaPedido, System.DateTime horaINicial, System.DateTime fechaFinalizacion, System.DateTime horaFinalizacion, string numeroOrdenServicio, System.DateTime fechaInicializacion) {
            this.UpdateOrderServiceAsync(estado, prioridad, idUsuarioAsignado, tipoPedidoServicio, productoServicio, estadoLanzamiento, codigoTransportista, codigoZonaServicio, fechaPedido, horaINicial, fechaFinalizacion, horaFinalizacion, numeroOrdenServicio, fechaInicializacion, null);
        }
        
        /// <remarks/>
        public void UpdateOrderServiceAsync(int estado, int prioridad, string idUsuarioAsignado, string tipoPedidoServicio, string productoServicio, int estadoLanzamiento, string codigoTransportista, string codigoZonaServicio, System.DateTime fechaPedido, System.DateTime horaINicial, System.DateTime fechaFinalizacion, System.DateTime horaFinalizacion, string numeroOrdenServicio, System.DateTime fechaInicializacion, object userState) {
            if ((this.UpdateOrderServiceOperationCompleted == null)) {
                this.UpdateOrderServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrderServiceOperationCompleted);
            }
            this.InvokeAsync("UpdateOrderService", new object[] {
                        estado,
                        prioridad,
                        idUsuarioAsignado,
                        tipoPedidoServicio,
                        productoServicio,
                        estadoLanzamiento,
                        codigoTransportista,
                        codigoZonaServicio,
                        fechaPedido,
                        horaINicial,
                        fechaFinalizacion,
                        horaFinalizacion,
                        numeroOrdenServicio,
                        fechaInicializacion}, this.UpdateOrderServiceOperationCompleted, userState);
        }
        
        private void OnUpdateOrderServiceOperationCompleted(object arg) {
            if ((this.UpdateOrderServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrderServiceCompleted(this, new UpdateOrderServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InsertDetailsServicesCompletedEventHandler(object sender, InsertDetailsServicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertDetailsServicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertDetailsServicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void PostShipmentCompletedEventHandler(object sender, PostShipmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostShipmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostShipmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void PostResourceCompletedEventHandler(object sender, PostResourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostResourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostResourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void CreateAndPostJournalResourceCompletedEventHandler(object sender, CreateAndPostJournalResourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateAndPostJournalResourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateAndPostJournalResourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void InsertServiceOrderAllocationCompletedEventHandler(object sender, InsertServiceOrderAllocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertServiceOrderAllocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertServiceOrderAllocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateDetailsServicesCompletedEventHandler(object sender, UpdateDetailsServicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDetailsServicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDetailsServicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void UpdateOrderServiceCompletedEventHandler(object sender, UpdateOrderServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateOrderServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateOrderServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591